name: "Build and Deploy"
 
on:
  push:
  pull_request:
    types: 
      - opened
    branches:
      - master
      - dev
      - stg
      - release/**
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Extract Branch / Tag name
        id: refs
        run: | # Extract to an actions
          SUB_REF=${GITHUB_REF#refs/}
          REF_TYPE=${SUB_REF%/*}
          REF_NAME=${SUB_REF#*/*}
          if [ $REF_TYPE == "heads" ]; then REF_BRANCH=${REF_NAME}; fi
          if [ $REF_TYPE == "tags"  ]; then REF_TAG=${REF_NAME}; fi
          echo ::set-output name=type::$REF_TYPE
          echo ::set-output name=name::$REF_NAME
          echo ::set-output name=branch::${REF_BRANCH-}
          echo ::set-output name=tag::${REF_TAG-}

      - name: Dump context
        run: | 
          echo -e "BRANCH: ${{ steps.refs.outputs.branch }}"
          echo -e "TAG:    ${{ steps.refs.outputs.tag }}"

      - name: "Checkout"
        uses: actions/checkout@v1

      - name: "Enable Docker experimental feature (build squash)"
        if: github.actor != 'nektos/act'
        run: |
          sudo rm -f /etc/docker/daemon.json
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart
          docker version

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}          

      - name: Build
        run: |
          docker build --squash -t output --build-arg VERSION=$GITHUB_SHA --build-arg BRANCH=${{ steps.refs.outputs.branch }} --build-arg TAG=${{ steps.refs.outputs.tag }} .

      - name: Test
        run: |
          docker run --name absch -e "CLEARINGHOUSE=absch" -e "CLEARINGHOUSE_HOST=absch.local" -d -p 8000:8000 output;sleep 10;
          docker exec absch curl --retry 10 --retry-delay 5 -v http://localhost:8000/
          docker kill absch

      - name: Deploy branches
        if: contains('master dev stg', steps.refs.outputs.branch)
        run: |
          docker tag output $GITHUB_REPOSITORY:${{steps.refs.outputs.branch}}
          docker push $GITHUB_REPOSITORY:${{steps.refs.outputs.branch}}

      - name: Deploy Tag
        if: steps.refs.outputs.type == 'tags'
        run: |
          docker tag output $GITHUB_REPOSITORY:${{steps.refs.outputs.tag}}
          docker tag output $GITHUB_REPOSITORY:latest
          docker push $GITHUB_REPOSITORY:${{steps.refs.outputs.tag}}
          docker push $GITHUB_REPOSITORY:latest
